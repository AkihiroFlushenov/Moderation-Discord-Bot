package me.akihiro.discordbot.command.moderation;

import me.akihiro.discordbot.bot.BotStrategy;
import net.dv8tion.jda.api.entities.Message;
import net.dv8tion.jda.api.events.message.MessageReceivedEvent;

import java.util.Arrays;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import java.util.concurrent.TimeUnit;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class MessageCleanModeration implements BotStrategy {

	private static final List<String> forbiddenWords =
			Arrays.asList("сука", "блять", "пидор", "нищий", "жирный", "ебал", "мама", "еблан", "попуск",
					"хуй", "хуесос", "хуесоска", "пизда", "пиздец", "пидар", "гандон", "гондон", "гомосек",
					"гомосека", "гомик", "гомике", "гомосексуалист", "педик", "педрила", "пидарас", "пидрила",
					"говно", "мразь", "ублюдок", "дрочить", "дрочка", "дрочун", "дрочила", "ебать", "ебаный",
					"ебучий", "ебануть", "ебанашка", "ебанулся", "ебанулась", "ебана", "ебан", "ебанутый",
					"ебанутая", "ебанутые", "ебанутое", "ебанутого", "ебанутых", "ебанутому", "ебанутым",
					"ебанутом", "ебануться", "уебать", "уебан", "уебки", "уебище", "уебанство", "заебать",
					"заебал", "заебись", "заебиська", "заеб", "заебан", "заебаный", "заеба", "заебана",
					"заебано", "заебаны", "заебанного", "заебанного", "заебанному", "заебанном", "заебанную",
					"заебанная", "заебанное", "заебанное", "заебанная", "заебанная", "заебанное", "заебанное",
					"заебанные", "заебанные", "заебанных", "заебанных", "заебанным", "заебанным", "заебанный",
					"заебанный", "заебанные", "заебанные", "заебанным", "заебанным", "заебанный", "заебанный",
					"заебанную", "заебанную", "заебанного", "заебанного", "заебанному", "заебанному", "заебанной",
					"заебанной", "заебанном", "заебанном", "заебанными", "заебанными", "заебанному", "пиздец",
					"нахуй", "хер", "пиздуй", "пиздить", "пиздеть", "пиздатый", "пиздатая", "пиздатое",
					"пиздатые", "пиздатым", "пиздатом", "пиздатых", "пиздатому", "пиздатыми", "пиздатая",
					"пиздатые", "пиздатый", "пиздатое", "пиздато", "пидорас", "мудак", "мудила", "мудозвон",
					"пердун", "пердунец", "пердунья", "пердунь", "пердуня", "гнида", "конченный", "мерзкий",
					"глупый", "тупой", "урод", "дебил", "идиот", "гад", "мудак", "мудила", "мудозвон", "пердун",
					"пердунец", "пердунья", "пердунь", "пердуня", "гнида", "конченный", "мерзкий", "глупый",
					"тупой", "урод", "дебил", "идиот", "гад", "мерзавец", "мерзавка", "бяка", "падла", "сволочь",
					"скотина", "чмо", "хамло", "козел", "козлина", "осел", "свинья", "свинья", "дурак", "сволочь",
					"ублюдок", "уёбище", "мудила", "гандон", "тварь", "тупица", "долбоёб", "долбоёб", "шлюха",
					"ебло", "бля", "сучий", "тварь", "лошара", "уродина", "сволота", "козёл", "скотина", "животное",
					"тупорылый", "мудак", "тряпка", "лох", "лошок", "задрот", "смазливый", "сопливый", "болван",
					"придурок", "хлюпик", "беспонтовый", "балбес", "дурак", "дебил", "урод", "жлоб", "мудила",
					"чудак", "недотёпа", "оболтус", "собака", "червь", "жопа", "мразь", "свинья", "быдло", "хам",
					"выродок", "ублюдок", "мудила", "сволочь", "кретин", "негодяй", "мерзавец", "гаденыш", "хвост",
					"урод", "лох", "тупица", "идиот", "дурак", "болван", "недотёпа", "придурок", "долбоеб", "долбаёб",
					"тряпка", "сопляк", "муравей", "муравьиный", "хуй", "жопа", "писюн", "пенис", "пениска", "пенису",
					"пенисом", "пенисе", "хуйня", "хуйный", "хуюшка", "хуёвый", "пиздюк", "пиздобол", "пиздобратия",
					"пиздопроизводитель", "пиздострадательство", "пиздошник", "пиздёж", "пиздища", "пиздобратия",
					"пиздюк", "пиздёж", "пиздун", "пизданувший", "пизданувшая", "пизданувшее", "пизданувшие",
					"пизданувшего", "пизданувшей", "пизданувшему", "пизданувшем", "пизданувшим", "пизданувшим",
					"пизданувших", "пизданувших", "пизданувшие", "пизданувшие", "пизданувшем", "пизданувшем");

	private static final Pattern linkPattern =
			Pattern.compile("http(s)?://(\\S)+");

	@Override
	public void execute(MessageReceivedEvent event) {
		Message message = event.getMessage();
		String content = message.getContentRaw();
		Timer timer = new Timer();

		/*
		 *   Удаляет сообщение до тех пор пока пользователь не зайдет в чат за айди - 1218221771434623037
		 */
		if (!event.getChannel().getId().equals("1218221771434623037")) {
			if (containsForbiddenWord(content)) {
				timer.schedule(new TimerTask() {
					@Override
					public void run() {
						message.delete().queueAfter(2, TimeUnit.SECONDS);
						event.getAuthor().openPrivateChannel().queue(
								privateChannel -> {
									privateChannel.sendMessage("Ваше сообщение содержало запрещенное слово и было удалено.").queue();
								},
								error -> System.err.println("Error sending private message: " + error.getMessage())
						);
					}
				}, 2000);
			}
		}

		/*
		 *   Удаляет ссылки во всех чатах!
		 */
		if (containsLink(content)) {
			timer.schedule(new TimerTask() {
				@Override
				public void run() {
					message.delete().queueAfter(2, TimeUnit.SECONDS);
					event.getAuthor().openPrivateChannel().queue(
							privateChannel -> {
								privateChannel.sendMessage("Ваше сообщение содержало сылку и было удалено.").queue();
							},
							error -> System.err.println("Error sending private message: " + error.getMessage())
					);
				}
			}, 2000);
		}
	}

	private boolean containsForbiddenWord(String content) {
		for (String word : forbiddenWords) {
			if (content.toLowerCase().contains(word.toLowerCase())) {
				return true;
			}
		}
		return false;
	}

	private boolean containsLink(String content) {
		Matcher matcher = linkPattern.matcher(content);
		return matcher.find();
	}
}
